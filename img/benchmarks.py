import math
import numpy as np
import matplotlib
import matplotlib.pyplot as plt
import random



def splitXYZarray(arr):
    x = np.split(arr, [1], 1)[0]
    y = np.split(np.split(arr, [1], 1)[1], [1], 1)[0]
    z = np.split(np.split(np.split(arr, [1], 1)[1], [1], 1)[1], 1)[0]

    X = []
    for i in x:
        X.append(i[0])
    Y = []
    for i in y:
        Y.append(i[0])
    Z = []
    for i in z:
        Z.append(i[0])

    return [X, Y, Z]


# caching off
test1 = np.array([[1.958080, 92.236931, 0.169600],
[2.004832, 46.177071, 0.080960],
[1.967488, 30.877813, 0.055904],
[1.992992, 23.381855, 0.042504],
[2.003968, 18.722939, 0.034061],
[1.987456, 15.563472, 0.028064],
[2.222880, 13.412671, 0.024389],
[2.037600, 11.684651, 0.021264],
[1.985920, 10.374816, 0.018667],
[1.983904, 9.308512, 0.017008],
[1.960736, 8.510740, 0.015151],
[1.957312, 7.764406, 0.013952],
[1.986304, 7.198821, 0.013090],
[1.986368, 6.642503, 0.012053],
[2.117056, 6.185693, 0.011337],
[1.988064, 5.851798, 0.010604],
[1.994080, 5.493705, 0.009928],
[1.989792, 5.179602, 0.009353],
[1.991392, 4.918392, 0.008874],
[2.028256, 4.703042, 0.008488],
[1.993632, 4.406452, 0.008064],
[2.095008, 4.222361, 0.007596],
[2.005824, 4.055805, 0.007338],
[1.965760, 3.882148, 0.007009],
[1.973696, 3.740394, 0.006830],
[2.149792, 3.610862, 0.006585],
[2.003360, 3.465269, 0.006279],
[1.986336, 3.309177, 0.006038],
[2.003424, 3.206497, 0.005884],
[2.077984, 3.106822, 0.005652],
[1.989344, 2.991747, 0.005444],
[1.995680, 2.911411, 0.005328],
[1.986976, 2.832227, 0.005132],
[1.989472, 2.743698, 0.005027],
[1.988384, 2.688595, 0.004798],
[2.038560, 2.582860, 0.004728],
[1.994016, 2.511755, 0.004519],
[2.250336, 2.459709, 0.004500],
[2.003968, 2.394800, 0.004302],
[2.120096, 2.328959, 0.004152],
[2.056736, 2.273217, 0.004122],
[1.993152, 2.221545, 0.004034],
[1.966848, 2.165518, 0.003958],
[1.962432, 2.113567, 0.003875],
[2.006272, 2.071973, 0.003710],
[1.985824, 2.034401, 0.003633],
[1.992736, 1.984170, 0.003616],
[2.093344, 1.935128, 0.003511],
[1.960096, 1.896845, 0.003450],
[1.990368, 1.873043, 0.003432],
[1.985664, 1.819925, 0.003317],
[1.984128, 1.805380, 0.003256],
[2.245952, 1.755704, 0.003178],
[1.967776, 1.732892, 0.003132],
[1.994624, 1.690555, 0.003121],
[1.989184, 1.666001, 0.003010],
[2.004480, 1.639855, 0.002977],
[2.139168, 1.597398, 0.002943],
[1.999296, 1.572813, 0.002868],
[2.251968, 1.548972, 0.002787],
[1.984128, 1.530874, 0.002804],
[1.983072, 1.504972, 0.002738],
[1.994784, 1.479414, 0.002665],
[2.157376, 1.458045, 0.002653],
[2.040256, 1.433016, 0.002604],
[2.093824, 1.409125, 0.002498],
[1.988672, 1.391395, 0.002505],
[1.990528, 1.371449, 0.002499],
[1.959648, 1.350003, 0.002479],
[2.150976, 1.327994, 0.002410],
[1.962080, 1.316479, 0.002400],
[1.985984, 1.283656, 0.002362],
[1.964416, 1.269460, 0.002360],
[1.986560, 1.261996, 0.002300],
[1.964768, 1.240829, 0.002284],
[1.971520, 1.226137, 0.002208],
[2.189088, 1.214973, 0.002231],
[2.004128, 1.193329, 0.002157],
[1.987136, 1.180488, 0.002105],
[1.956736, 1.162976, 0.002135],
[1.968896, 1.148981, 0.002090],
[2.152416, 1.140825, 0.002079],
[2.001568, 1.124255, 0.002038],
[2.093088, 1.113144, 0.002010],
[1.990816, 1.100470, 0.001987],
[1.991360, 1.088087, 0.001969],
[2.118016, 1.060597, 0.001892],
[2.002496, 1.049392, 0.001900],
[1.961760, 1.048117, 0.001875],
[1.982784, 1.034991, 0.001886],
[1.994368, 1.022627, 0.001863],
[1.989120, 1.008410, 0.001845],
[2.004960, 1.002491, 0.001818],
[2.029344, 0.994822, 0.001795],
[2.188736, 0.980098, 0.001793],
[1.964736, 0.970455, 0.001775],
[1.985152, 0.959934, 0.001739],
[1.961120, 0.951804, 0.001708],
[1.964864, 0.941171, 0.001705],
[1.988928, 0.936952, 0.001716]])



# caching on
test2 = np.array([[2.494016, 92.547768, 0.167488],
[0.526912, 45.932911, 0.079744],
[0.527808, 30.943007, 0.057259],
[0.530272, 23.349321, 0.042128],
[0.526976, 18.587578, 0.033837],
[0.526880, 15.470351, 0.027995],
[0.526720, 13.265764, 0.023963],
[0.526496, 11.566884, 0.021040],
[0.542880, 10.303655, 0.018962],
[0.527552, 9.318010, 0.017139],
[0.526592, 8.441937, 0.015552],
[0.527584, 7.747086, 0.014045],
[0.526944, 7.167712, 0.013046],
[0.527008, 6.634304, 0.012030],
[0.525664, 6.182732, 0.011098],
[0.527072, 5.796864, 0.010652],
[0.528288, 5.447640, 0.010033],
[0.526208, 5.132676, 0.009433],
[0.543328, 4.902895, 0.008972],
[0.527104, 4.649806, 0.008403],
[0.526848, 4.414547, 0.008108],
[0.527168, 4.217316, 0.007703],
[0.527392, 4.032248, 0.007282],
[0.528384, 3.848432, 0.006948],
[0.527008, 3.715603, 0.006842],
[0.527616, 3.586645, 0.006505],
[0.526880, 3.444128, 0.006263],
[0.543488, 3.327535, 0.006095],
[0.527552, 3.225973, 0.005977],
[0.526944, 3.112988, 0.005572],
[0.526656, 2.998743, 0.005500],
[0.529120, 2.899244, 0.005271],
[0.527552, 2.798719, 0.005120],
[0.526624, 2.727339, 0.005040],
[0.527584, 2.644628, 0.004789],
[0.542496, 2.581444, 0.004652],
[0.527872, 2.519008, 0.004668],
[0.537120, 2.445487, 0.004481],
[0.526912, 2.389585, 0.004317],
[0.526240, 2.317783, 0.004237],
[0.526912, 2.254068, 0.004101],
[0.526400, 2.212065, 0.004029],
[0.527232, 2.154440, 0.003914],
[0.528128, 2.113713, 0.003866],
[0.527456, 2.063518, 0.003758],
[0.527168, 2.014530, 0.003655],
[0.527616, 1.966329, 0.003548],
[0.527200, 1.925143, 0.003532],
[0.526528, 1.898269, 0.003438],
[0.527104, 1.851683, 0.003404],
[0.526688, 1.824100, 0.003263],
[0.527744, 1.782810, 0.003296],
[0.528800, 1.747141, 0.003164],
[0.544160, 1.722655, 0.003135],
[0.526240, 1.696624, 0.003121],
[0.527104, 1.658607, 0.003019],
[0.527008, 1.632271, 0.002979],
[0.527136, 1.597863, 0.002921],
[0.527616, 1.567335, 0.002872],
[0.544192, 1.543772, 0.002819],
[0.527072, 1.521383, 0.002765],
[0.543296, 1.501356, 0.002742],
[0.527424, 1.472527, 0.002676],
[0.526624, 1.456109, 0.002641],
[0.527520, 1.420382, 0.002621],
[0.526432, 1.402112, 0.002557],
[0.526176, 1.388577, 0.002537],
[0.527360, 1.368417, 0.002497],
[0.528128, 1.347446, 0.002445],
[0.527392, 1.327097, 0.002435],
[0.528096, 1.303372, 0.002402],
[0.527648, 1.291256, 0.002332],
[0.527392, 1.268140, 0.002332],
[0.527584, 1.255002, 0.002245],
[0.528384, 1.238826, 0.002241],
[0.526656, 1.217557, 0.002219],
[0.527744, 1.207791, 0.002173],
[0.527008, 1.186642, 0.002153],
[0.526944, 1.169845, 0.002153],
[0.527040, 1.162031, 0.002132],
[0.528064, 1.144153, 0.002086],
[0.526304, 1.132309, 0.002083],
[0.527552, 1.114365, 0.002069],
[0.526016, 1.104861, 0.002007],
[0.527456, 1.093900, 0.002007],
[0.543936, 1.087497, 0.001976],
[0.527392, 1.068031, 0.001956],
[0.527616, 1.059099, 0.001930],
[0.527680, 1.044656, 0.001914],
[0.527360, 1.031704, 0.001897],
[0.528896, 1.020935, 0.001882],
[0.527360, 1.006031, 0.001840],
[0.527904, 0.995829, 0.001853],
[0.527680, 0.985792, 0.001826],
[0.543200, 0.981030, 0.001768],
[0.542592, 0.966299, 0.001741],
[0.528000, 0.958896, 0.001750],
[0.527936, 0.946318, 0.001730],
[0.527648, 0.934102, 0.001715],
[0.526528, 0.927861, 0.001700]])



# no stream compaction
test3 = np.array([[2.716736, 164.539856, 0.493984],
[0.527744, 64.344673, 0.192656],
[0.526624, 54.699841, 0.164885],
[0.527616, 41.125656, 0.122632],
[0.527520, 32.765911, 0.098554],
[0.525824, 27.373541, 0.082272],
[0.528288, 23.410738, 0.070583],
[0.527040, 20.484591, 0.061696],
[0.527328, 18.244291, 0.054702],
[0.527072, 16.505596, 0.049379],
[0.527872, 14.982303, 0.044977],
[0.543072, 13.744166, 0.041051],
[0.526272, 12.612618, 0.038117],
[0.527456, 11.709832, 0.035150],
[0.527040, 10.955324, 0.032986],
[0.527296, 10.290640, 0.030960],
[0.527968, 9.643441, 0.028962],
[0.527584, 9.106180, 0.027387],
[0.526272, 8.612485, 0.025861],
[0.526880, 8.196288, 0.024626],
[0.528416, 7.847578, 0.023480],
[0.526752, 7.475409, 0.022333],
[0.527072, 7.164041, 0.021459],
[0.526080, 6.858116, 0.020555],
[0.527072, 6.584996, 0.019784],
[0.542752, 6.346485, 0.018975],
[0.527648, 6.080991, 0.018305],
[0.527520, 5.862784, 0.017662],
[0.527680, 5.661325, 0.016984],
[0.527072, 5.468896, 0.016496],
[0.527712, 5.304417, 0.015917],
[0.527488, 5.153357, 0.015371],
[0.527296, 5.007642, 0.014943],
[0.528544, 4.848737, 0.014565],
[0.527168, 4.684408, 0.014174],
[0.526944, 4.564163, 0.013669],
[0.526912, 4.446689, 0.013398],
[0.526624, 4.331209, 0.012929],
[0.527840, 4.211207, 0.012685],
[0.528032, 4.103486, 0.012338],
[0.526048, 4.005950, 0.011974],
[0.527744, 3.897110, 0.011738],
[0.525984, 3.822284, 0.011518],
[0.528416, 3.742588, 0.011215],
[0.526880, 3.668365, 0.010970],
[0.526944, 3.574212, 0.010687],
[0.527712, 3.498007, 0.010512],
[0.526752, 3.411321, 0.010317],
[0.527360, 3.347157, 0.010030],
[0.527008, 3.288249, 0.009896],
[0.527776, 3.215600, 0.009658],
[0.527776, 3.163996, 0.009491],
[0.528576, 3.090248, 0.009302],
[0.543712, 3.033322, 0.009148],
[0.527616, 2.997282, 0.009000],
[0.527712, 2.945857, 0.008820],
[0.527136, 2.887862, 0.008656],
[0.526176, 2.828802, 0.008490],
[0.526592, 2.788820, 0.008367],
[0.527104, 2.734362, 0.008179],
[0.527040, 2.690485, 0.008078],
[0.527520, 2.653881, 0.007985],
[0.525920, 2.612229, 0.007845],
[0.527104, 2.562666, 0.007707],
[0.527296, 2.517961, 0.007533],
[0.526944, 2.500291, 0.007482],
[0.527552, 2.458971, 0.007380],
[0.543744, 2.423354, 0.007273],
[0.527808, 2.381109, 0.007155],
[0.527328, 2.339688, 0.007042],
[0.527360, 2.312800, 0.006930],
[0.527008, 2.285981, 0.006842],
[0.526304, 2.248565, 0.006726],
[0.527872, 2.218091, 0.006662],
[0.527072, 2.189179, 0.006555],
[0.527200, 2.159893, 0.006462],
[0.526944, 2.134344, 0.006384],
[0.526336, 2.114057, 0.006322],
[0.528192, 2.086228, 0.006244],
[0.528128, 2.060918, 0.006160],
[0.527456, 2.025441, 0.006116],
[0.527296, 1.999702, 0.006036],
[0.527232, 1.983788, 0.005936],
[0.528608, 1.962197, 0.005882],
[0.527232, 1.934806, 0.005830],
[0.527008, 1.910775, 0.005770],
[0.526624, 1.886219, 0.005665],
[0.527552, 1.862788, 0.005622],
[0.543648, 1.850820, 0.005522],
[0.526848, 1.827699, 0.005481],
[0.526592, 1.810515, 0.005418],
[0.527840, 1.789024, 0.005357],
[0.528128, 1.762288, 0.005299],
[0.527552, 1.746815, 0.005263],
[0.527168, 1.730650, 0.005195],
[0.543200, 1.710569, 0.005121],
[0.527360, 1.691168, 0.005072],
[0.527520, 1.676294, 0.005029],
[0.526784, 1.657612, 0.004995],
[0.527072, 1.646765, 0.004925]])


# sorting off
test4 = np.array([[2.492192, 92.863838, 0.168640],
[0.526688, 47.013626, 0.084768],
[0.526592, 30.909760, 0.056331],
[0.526624, 23.289906, 0.041784],
[0.527040, 18.628128, 0.033805],
[0.527072, 15.428017, 0.028459],
[0.527552, 13.233614, 0.023973],
[0.526464, 11.560944, 0.021160],
[0.526944, 10.326499, 0.018965],
[0.527808, 9.362621, 0.016816],
[0.527392, 8.451232, 0.015261],
[0.526784, 7.772504, 0.014029],
[0.526496, 7.208549, 0.013120],
[0.526688, 6.647838, 0.011998],
[0.527488, 6.231918, 0.011217],
[0.526720, 5.843338, 0.010542],
[0.525920, 5.515668, 0.010042],
[0.527264, 5.166901, 0.009292],
[0.527008, 4.883456, 0.008837],
[0.526432, 4.665288, 0.008542],
[0.526496, 4.426203, 0.007968],
[0.527744, 4.227036, 0.007686],
[0.528864, 3.998388, 0.007279],
[0.527072, 3.864536, 0.007099],
[0.527488, 3.756052, 0.006760],
[0.528224, 3.598704, 0.006535],
[0.527264, 3.452561, 0.006285],
[0.527904, 3.346966, 0.006006],
[0.526688, 3.213554, 0.005822],
[0.526592, 3.105964, 0.005564],
[0.527776, 3.023556, 0.005469],
[0.526176, 2.926422, 0.005311],
[0.528416, 2.837413, 0.005032],
[0.527680, 2.752710, 0.004990],
[0.527680, 2.657678, 0.004837],
[0.528480, 2.582910, 0.004763],
[0.527968, 2.511346, 0.004515],
[0.526752, 2.440772, 0.004371],
[0.527264, 2.381298, 0.004264],
[0.527104, 2.319196, 0.004226],
[0.527520, 2.260986, 0.004149],
[0.526560, 2.216680, 0.003977],
[0.527584, 2.160479, 0.003877],
[0.526720, 2.132780, 0.003847],
[0.526144, 2.073379, 0.003721],
[0.525824, 2.024787, 0.003640],
[0.540768, 1.991069, 0.003574],
[0.528512, 1.940217, 0.003540],
[0.526944, 1.906969, 0.003435],
[0.526112, 1.869633, 0.003350],
[0.543264, 1.826497, 0.003250],
[0.526880, 1.780746, 0.003275],
[0.527168, 1.744266, 0.003197],
[0.527360, 1.725679, 0.003109],
[0.527232, 1.692372, 0.003068],
[0.526400, 1.663970, 0.002989],
[0.526496, 1.640262, 0.002906],
[0.527072, 1.605669, 0.002905],
[0.527904, 1.573423, 0.002844],
[0.528000, 1.552200, 0.002819],
[0.526688, 1.533820, 0.002787],
[0.527488, 1.506771, 0.002745],
[0.527424, 1.482788, 0.002682],
[0.526752, 1.456645, 0.002624],
[0.528352, 1.434404, 0.002620],
[0.527680, 1.411622, 0.002539],
[0.526560, 1.386509, 0.002521],
[0.526400, 1.373167, 0.002458],
[0.526592, 1.347450, 0.002426],
[0.527136, 1.327983, 0.002424],
[0.527616, 1.307986, 0.002391],
[0.526656, 1.295923, 0.002363],
[0.526304, 1.270349, 0.002293],
[0.526944, 1.259770, 0.002298],
[0.527072, 1.247418, 0.002246],
[0.526752, 1.229767, 0.002233],
[0.526240, 1.209666, 0.002162],
[0.526848, 1.195228, 0.002158],
[0.526464, 1.182570, 0.002155],
[0.526592, 1.166842, 0.002114],
[0.527200, 1.144127, 0.002054],
[0.526624, 1.133714, 0.002071],
[0.527040, 1.117248, 0.002031],
[0.527200, 1.111517, 0.002006],
[0.527008, 1.100046, 0.002003],
[0.527424, 1.091932, 0.001965],
[0.527264, 1.072253, 0.001920],
[0.527872, 1.058026, 0.001908],
[0.527008, 1.048187, 0.001898],
[0.527264, 1.036139, 0.001847],
[0.527232, 1.026612, 0.001865],
[0.527648, 1.017470, 0.001817],
[0.526208, 1.003674, 0.001810],
[0.526464, 0.989821, 0.001783],
[0.527328, 0.981445, 0.001804],
[0.527136, 0.969445, 0.001767],
[0.528256, 0.957215, 0.001729],
[0.527744, 0.944969, 0.001716],
[0.527584, 0.943907, 0.001687],
[0.526976, 0.938011, 0.001692]])



# block size 16
test5 = np.array([[2.525152, 166.031738, 0.257984],
[0.526496, 81.752426, 0.121424],
[0.526528, 55.404957, 0.086219],
[0.526272, 41.615448, 0.064424],
[0.526848, 33.352242, 0.051757],
[0.527008, 27.713717, 0.042949],
[0.526592, 23.758230, 0.036622],
[0.526656, 20.790766, 0.032072],
[0.526720, 18.460423, 0.028437],
[0.526976, 16.619820, 0.025578],
[0.526816, 15.119416, 0.023366],
[0.526880, 13.800729, 0.021256],
[0.527200, 12.831313, 0.019788],
[0.525984, 11.856563, 0.018434],
[0.526944, 11.087668, 0.017109],
[0.527136, 10.395638, 0.016084],
[0.526880, 9.765053, 0.015128],
[0.527520, 9.234161, 0.014254],
[0.526368, 8.733205, 0.013494],
[0.527200, 8.319735, 0.012842],
[0.527424, 7.909846, 0.012233],
[0.526464, 7.534340, 0.011712],
[0.528480, 7.235661, 0.011161],
[0.525856, 6.929302, 0.010695],
[0.527648, 6.654031, 0.010273],
[0.527968, 6.401440, 0.009914],
[0.527264, 6.170142, 0.009581],
[0.527936, 5.956487, 0.009261],
[0.527648, 5.724722, 0.008861],
[0.543168, 5.532925, 0.008556],
[0.526528, 5.365857, 0.008327],
[0.528160, 5.194345, 0.008015],
[0.526400, 5.040628, 0.007792],
[0.527104, 4.903884, 0.007601],
[0.527136, 4.750342, 0.007324],
[0.526464, 4.622639, 0.007180],
[0.527456, 4.496698, 0.006967],
[0.527456, 4.367052, 0.006778],
[0.526560, 4.241971, 0.006552],
[0.542656, 4.163442, 0.006446],
[0.527168, 4.061357, 0.006236],
[0.526208, 3.948190, 0.006104],
[0.526816, 3.855471, 0.005978],
[0.527232, 3.787791, 0.005852],
[0.526656, 3.698210, 0.005751],
[0.527488, 3.619748, 0.005551],
[0.527104, 3.540580, 0.005455],
[0.527808, 3.456969, 0.005367],
[0.527328, 3.400209, 0.005266],
[0.526688, 3.330839, 0.005142],
[0.526688, 3.260652, 0.005008],
[0.526656, 3.202262, 0.004972],
[0.526720, 3.132550, 0.004852],
[0.527296, 3.077445, 0.004745],
[0.526496, 3.024462, 0.004677],
[0.527584, 2.972084, 0.004586],
[0.527072, 2.917149, 0.004519],
[0.527360, 2.867554, 0.004437],
[0.526336, 2.824634, 0.004328],
[0.526208, 2.766237, 0.004288],
[0.525984, 2.731352, 0.004193],
[0.525632, 2.682613, 0.004124],
[0.527680, 2.633406, 0.004091],
[0.527360, 2.602366, 0.003994],
[0.526432, 2.559933, 0.003959],
[0.527200, 2.523466, 0.003892],
[0.526432, 2.482595, 0.003826],
[0.527552, 2.446587, 0.003779],
[0.526592, 2.413371, 0.003730],
[0.526848, 2.372722, 0.003673],
[0.526208, 2.338703, 0.003620],
[0.527776, 2.314137, 0.003596],
[0.526592, 2.275593, 0.003510],
[0.527680, 2.253317, 0.003495],
[0.528064, 2.216310, 0.003449],
[0.526336, 2.190888, 0.003375],
[0.526816, 2.162191, 0.003361],
[0.526976, 2.130907, 0.003306],
[0.527168, 2.108123, 0.003276],
[0.527200, 2.089760, 0.003238],
[0.526848, 2.054038, 0.003176],
[0.527232, 2.025354, 0.003125],
[0.527264, 2.004395, 0.003109],
[0.527072, 1.981941, 0.003060],
[0.527264, 1.959684, 0.003016],
[0.526816, 1.934648, 0.002991],
[0.527360, 1.910694, 0.002961],
[0.527264, 1.887733, 0.002912],
[0.527488, 1.869045, 0.002900],
[0.526816, 1.850114, 0.002865],
[0.527232, 1.831412, 0.002810],
[0.526880, 1.807758, 0.002792],
[0.527904, 1.785855, 0.002871],
[0.526304, 1.772039, 0.002725],
[0.526912, 1.747392, 0.002703],
[0.527136, 1.733291, 0.002684],
[0.526432, 1.714916, 0.002656],
[0.527200, 1.700117, 0.002612],
[0.526848, 1.680258, 0.002593],
[0.526624, 1.662151, 0.002573]])



# blocksize 32
test6 = np.array([[2.687360, 92.254333, 0.170400],
[0.526912, 45.799583, 0.079936],
[0.526144, 30.858635, 0.057077],
[0.527872, 23.095354, 0.042304],
[0.526816, 18.563473, 0.033734],
[0.527648, 15.421201, 0.027957],
[0.527232, 13.189542, 0.024425],
[0.526784, 11.533927, 0.021084],
[0.527040, 10.299012, 0.018901],
[0.526080, 9.222674, 0.016813],
[0.526912, 8.401547, 0.015569],
[0.526368, 7.669723, 0.013931],
[0.526976, 7.113544, 0.013216],
[0.527040, 6.570382, 0.012181],
[0.527232, 6.167435, 0.011251],
[0.527200, 5.778370, 0.010576],
[0.526912, 5.417510, 0.010014],
[0.526336, 5.120430, 0.009364],
[0.527296, 4.849773, 0.009073],
[0.526336, 4.630563, 0.008464],
[0.526624, 4.386227, 0.008008],
[0.527200, 4.191820, 0.007728],
[0.527264, 4.030725, 0.007455],
[0.526816, 3.851388, 0.007043],
[0.527232, 3.700685, 0.006703],
[0.526656, 3.563993, 0.006516],
[0.526816, 3.421422, 0.006387],
[0.527200, 3.308887, 0.006049],
[0.527200, 3.178164, 0.005880],
[0.526528, 3.081920, 0.005647],
[0.527328, 2.983163, 0.005468],
[0.526848, 2.887723, 0.005272],
[0.526944, 2.799695, 0.005069],
[0.527712, 2.718317, 0.004980],
[0.526912, 2.629118, 0.004885],
[0.527776, 2.564778, 0.004706],
[0.527552, 2.498754, 0.004565],
[0.527008, 2.434319, 0.004389],
[0.527456, 2.368506, 0.004376],
[0.526240, 2.305238, 0.004241],
[0.526336, 2.260880, 0.004151],
[0.526848, 2.195932, 0.004040],
[0.527200, 2.143270, 0.003984],
[0.526176, 2.118330, 0.003834],
[0.525952, 2.056770, 0.003792],
[0.527904, 2.005929, 0.003660],
[0.526848, 1.965971, 0.003612],
[0.526592, 1.921673, 0.003533],
[0.526848, 1.879583, 0.003423],
[0.526784, 1.857444, 0.003427],
[0.527520, 1.808173, 0.003288],
[0.526176, 1.780097, 0.003294],
[0.526304, 1.742792, 0.003188],
[0.543104, 1.703407, 0.003141],
[0.526304, 1.688189, 0.003090],
[0.526688, 1.652946, 0.003037],
[0.526336, 1.627756, 0.002979],
[0.526912, 1.593338, 0.002910],
[0.526304, 1.567168, 0.002878],
[0.527808, 1.533061, 0.002854],
[0.526944, 1.514080, 0.002789],
[0.527296, 1.489356, 0.002731],
[0.527072, 1.464280, 0.002683],
[0.526784, 1.439407, 0.002635],
[0.526912, 1.425580, 0.002639],
[0.526944, 1.398468, 0.002575],
[0.526176, 1.383054, 0.002535],
[0.526592, 1.367963, 0.002472],
[0.526272, 1.336567, 0.002461],
[0.526688, 1.316859, 0.002411],
[0.526848, 1.298388, 0.002430],
[0.526528, 1.286129, 0.002340],
[0.526752, 1.263645, 0.002334],
[0.527008, 1.252260, 0.002315],
[0.527072, 1.229676, 0.002275],
[0.538944, 1.218912, 0.002241],
[0.527008, 1.201800, 0.002215],
[0.526112, 1.185287, 0.002195],
[0.527296, 1.167812, 0.002140],
[0.526496, 1.153172, 0.002123],
[0.533280, 1.141601, 0.002065],
[0.542816, 1.126291, 0.002024],
[0.527008, 1.114109, 0.002033],
[0.543392, 1.101092, 0.002050],
[0.526272, 1.085848, 0.001995],
[0.543648, 1.077611, 0.001988],
[0.526528, 1.064795, 0.001949],
[0.527232, 1.048822, 0.001904],
[0.526752, 1.033535, 0.001903],
[0.526848, 1.027829, 0.002019],
[0.526464, 1.015207, 0.001864],
[0.526432, 1.003590, 0.001802],
[0.526400, 0.992796, 0.001821],
[0.527360, 0.983161, 0.001819],
[0.526272, 0.975856, 0.001794],
[0.527584, 0.962094, 0.001764],
[0.526304, 0.952503, 0.001753],
[0.527072, 0.941966, 0.001740],
[0.526432, 0.930846, 0.001701],
[0.527552, 0.925195, 0.001697]])



# blocksize 64
test7 = np.array([[2.494464, 92.343430, 0.193184],
[0.526912, 45.874447, 0.094992],
[0.526624, 30.912781, 0.065685],
[0.526656, 23.174250, 0.049200],
[0.526240, 18.591442, 0.039168],
[0.526496, 15.446027, 0.033205],
[0.526816, 13.237046, 0.026414],
[0.526208, 11.608972, 0.023332],
[0.527232, 10.284010, 0.021109],
[0.526336, 9.258106, 0.019770],
[0.526048, 8.417385, 0.018208],
[0.526880, 7.698976, 0.015773],
[0.537056, 7.155564, 0.014823],
[0.526176, 6.625335, 0.014030],
[0.527264, 6.183251, 0.013045],
[0.525536, 5.788670, 0.011744],
[0.527072, 5.441266, 0.011499],
[0.545184, 5.126898, 0.010628],
[0.526144, 4.869977, 0.010356],
[0.526624, 4.628614, 0.010307],
[0.544736, 4.407982, 0.009253],
[0.526784, 4.202992, 0.008828],
[0.526816, 4.025242, 0.008435],
[0.545824, 3.859684, 0.008069],
[0.526624, 3.704155, 0.007601],
[0.527424, 3.568055, 0.007717],
[0.526336, 3.437934, 0.007322],
[0.526368, 3.318609, 0.006882],
[0.526336, 3.192936, 0.006684],
[0.526144, 3.082376, 0.006464],
[0.527072, 2.992528, 0.006154],
[0.525952, 2.892279, 0.006123],
[0.526880, 2.804508, 0.005896],
[0.525952, 2.724290, 0.005637],
[0.527168, 2.641862, 0.005561],
[0.525856, 2.576711, 0.005366],
[0.526144, 2.510504, 0.005680],
[0.536960, 2.434540, 0.005078],
[0.526240, 2.371053, 0.004967],
[0.526528, 2.310038, 0.004770],
[0.526752, 2.265446, 0.004864],
[0.526208, 2.202981, 0.004925],
[0.526528, 2.150729, 0.004500],
[0.526560, 2.112962, 0.004332],
[0.526304, 2.069739, 0.004343],
[0.525952, 2.006701, 0.004242],
[0.526432, 1.973998, 0.004176],
[0.525920, 1.932026, 0.003959],
[0.542688, 1.885113, 0.004043],
[0.526752, 1.861150, 0.003954],
[0.527104, 1.816670, 0.003800],
[0.527424, 1.782106, 0.003771],
[0.526688, 1.747839, 0.003701],
[0.526080, 1.711498, 0.003661],
[0.526464, 1.688966, 0.003588],
[0.526048, 1.660695, 0.003470],
[0.525408, 1.626618, 0.003381],
[0.527232, 1.599068, 0.003313],
[0.526048, 1.567620, 0.003297],
[0.526368, 1.543171, 0.003350],
[0.525760, 1.526575, 0.003269],
[0.526784, 1.493423, 0.003078],
[0.540544, 1.464558, 0.003150],
[0.526240, 1.450265, 0.003066],
[0.526944, 1.423357, 0.002988],
[0.526656, 1.401959, 0.002855],
[0.527232, 1.384263, 0.002934],
[0.542720, 1.363177, 0.002853],
[0.525920, 1.342156, 0.002817],
[0.526528, 1.320220, 0.002721],
[0.539040, 1.304576, 0.002702],
[0.526912, 1.288551, 0.002696],
[0.526976, 1.271951, 0.002621],
[0.526560, 1.254510, 0.002795],
[0.526848, 1.235744, 0.002583],
[0.527584, 1.221130, 0.002592],
[0.526016, 1.205124, 0.002516],
[0.526720, 1.186947, 0.002519],
[0.526784, 1.171729, 0.002483],
[0.525792, 1.161125, 0.002432],
[0.526176, 1.142205, 0.002415],
[0.527488, 1.130970, 0.002381],
[0.526592, 1.121450, 0.002326],
[0.526176, 1.102690, 0.002295],
[0.525696, 1.089173, 0.002295],
[0.527488, 1.078444, 0.002211],
[0.526240, 1.065948, 0.002181],
[0.526208, 1.051747, 0.002217],
[0.526624, 1.039509, 0.002150],
[0.527200, 1.029720, 0.002198],
[0.526592, 1.018922, 0.002196],
[0.527712, 1.003889, 0.002128],
[0.527232, 0.997510, 0.002081],
[0.526560, 0.988502, 0.002151],
[0.542848, 0.975518, 0.002010],
[0.526400, 0.961321, 0.002060],
[0.526432, 0.956456, 0.001983],
[0.542720, 0.944538, 0.001974],
[0.525824, 0.933905, 0.001972],
[0.526464, 0.927411, 0.001910]])



# blocksize 128
test8 = np.array([[2.645120, 93.691650, 0.193216],
[0.525792, 46.584637, 0.094208],
[0.525920, 31.323082, 0.066560],
[0.526400, 23.471081, 0.050496],
[0.526112, 18.830030, 0.038662],
[0.526304, 15.656497, 0.033760],
[0.525600, 13.378706, 0.027913],
[0.526240, 11.753068, 0.026108],
[0.525920, 10.446973, 0.022080],
[0.526752, 9.368109, 0.019462],
[0.525536, 8.542665, 0.018932],
[0.525632, 7.791086, 0.016360],
[0.526656, 7.265494, 0.015239],
[0.525888, 6.698348, 0.014322],
[0.527520, 6.271516, 0.013572],
[0.526656, 5.884320, 0.012330],
[0.526400, 5.519812, 0.011844],
[0.525920, 5.204885, 0.010974],
[0.526656, 4.934853, 0.010600],
[0.527168, 4.696053, 0.009946],
[0.527200, 4.473606, 0.009362],
[0.525664, 4.253712, 0.008794],
[0.526912, 4.077538, 0.008383],
[0.526880, 3.908549, 0.008448],
[0.526144, 3.767087, 0.008082],
[0.525728, 3.621447, 0.007289],
[0.525600, 3.486739, 0.007467],
[0.526112, 3.365945, 0.007169],
[0.525408, 3.240043, 0.006901],
[0.525792, 3.130668, 0.006602],
[0.525984, 3.045056, 0.006428],
[0.526688, 2.929637, 0.006166],
[0.525888, 2.839216, 0.006039],
[0.526496, 2.757808, 0.005924],
[0.525696, 2.679986, 0.005983],
[0.525664, 2.609791, 0.005422],
[0.526080, 2.532912, 0.005329],
[0.525248, 2.467693, 0.005336],
[0.526240, 2.406642, 0.005158],
[0.525824, 2.348706, 0.005061],
[0.526400, 2.296278, 0.004933],
[0.541984, 2.230701, 0.004792],
[0.526368, 2.176904, 0.004554],
[0.526784, 2.134767, 0.004431],
[0.526432, 2.088670, 0.004234],
[0.526016, 2.037636, 0.004652],
[0.526176, 1.997485, 0.004272],
[0.526176, 1.952713, 0.004186],
[0.525952, 1.910019, 0.004157],
[0.524896, 1.881636, 0.004011],
[0.525728, 1.835786, 0.003817],
[0.526176, 1.807821, 0.003600],
[0.526496, 1.765791, 0.003549],
[0.526624, 1.739284, 0.003746],
[0.526144, 1.709566, 0.003683],
[0.526304, 1.680281, 0.003592],
[0.526368, 1.650449, 0.003467],
[0.526624, 1.622874, 0.003510],
[0.527936, 1.591491, 0.003345],
[0.526176, 1.562731, 0.003365],
[0.525600, 1.537326, 0.003233],
[0.525888, 1.515051, 0.003180],
[0.526080, 1.485987, 0.003161],
[0.526048, 1.469639, 0.003055],
[0.526240, 1.444398, 0.003088],
[0.526816, 1.422211, 0.003004],
[0.526272, 1.401071, 0.002970],
[0.525920, 1.384279, 0.002977],
[0.525088, 1.364687, 0.002763],
[0.526624, 1.336349, 0.002901],
[0.525408, 1.324287, 0.002785],
[0.525888, 1.305144, 0.002842],
[0.525600, 1.281042, 0.002697],
[0.524832, 1.270672, 0.002618],
[0.526144, 1.253550, 0.002676],
[0.542944, 1.234956, 0.002781],
[0.526048, 1.221206, 0.002633],
[0.526016, 1.206601, 0.002582],
[0.527008, 1.188202, 0.002459],
[0.525504, 1.177119, 0.002504],
[0.525184, 1.162562, 0.002479],
[0.526048, 1.140104, 0.002408],
[0.526464, 1.131942, 0.002396],
[0.525920, 1.119515, 0.002285],
[0.526304, 1.103849, 0.002363],
[0.542400, 1.093254, 0.002210],
[0.525344, 1.080977, 0.002234],
[0.525984, 1.066483, 0.002261],
[0.525888, 1.056577, 0.002150],
[0.526080, 1.042055, 0.002351],
[0.526112, 1.026652, 0.002207],
[0.526144, 1.020538, 0.002182],
[0.525920, 1.008082, 0.002162],
[0.526176, 0.997842, 0.002124],
[0.526944, 0.988139, 0.002076],
[0.525856, 0.979434, 0.002084],
[0.525920, 0.970824, 0.002085],
[0.525696, 0.960836, 0.002067],
[0.525952, 0.945420, 0.001881],
[0.526656, 0.939349, 0.002000]])



# blocsize 256
test9 = np.array([[2.495968, 96.008804, 0.193504],
[0.526400, 47.620018, 0.096384],
[0.526496, 32.129505, 0.063723],
[0.526720, 24.110680, 0.049368],
[0.525920, 19.314220, 0.038003],
[0.526624, 16.114386, 0.032768],
[0.527648, 13.801028, 0.027442],
[0.526368, 12.044915, 0.025860],
[0.525248, 10.662588, 0.022667],
[0.526432, 9.612384, 0.019590],
[0.526336, 8.735779, 0.018865],
[0.526240, 7.986947, 0.016485],
[0.525728, 7.425836, 0.014917],
[0.526432, 6.858802, 0.015801],
[0.525760, 6.429681, 0.013365],
[0.525632, 6.022490, 0.012412],
[0.526304, 5.650533, 0.011484],
[0.525728, 5.334885, 0.011289],
[0.541344, 5.054647, 0.010129],
[0.525856, 4.819430, 0.009789],
[0.526176, 4.578376, 0.009722],
[0.527168, 4.380795, 0.009379],
[0.526688, 4.191958, 0.008853],
[0.526976, 4.007013, 0.008601],
[0.527072, 3.872475, 0.008625],
[0.526144, 3.698152, 0.007958],
[0.525920, 3.563214, 0.007392],
[0.525824, 3.461328, 0.007160],
[0.525120, 3.323164, 0.006585],
[0.526080, 3.210662, 0.006999],
[0.525760, 3.117172, 0.006627],
[0.534656, 2.999490, 0.006374],
[0.542688, 2.917559, 0.006121],
[0.526432, 2.832815, 0.005990],
[0.526432, 2.743234, 0.005719],
[0.525792, 2.676670, 0.005452],
[0.526208, 2.610700, 0.005406],
[0.526336, 2.530285, 0.005365],
[0.525664, 2.459977, 0.005118],
[0.525280, 2.406039, 0.004941],
[0.525568, 2.346537, 0.005185],
[0.526240, 2.290846, 0.004558],
[0.525856, 2.237285, 0.004755],
[0.525344, 2.190200, 0.004818],
[0.525184, 2.145710, 0.004223],
[0.525632, 2.090215, 0.004353],
[0.525920, 2.050378, 0.004253],
[0.525536, 2.009836, 0.004199],
[0.525824, 1.966446, 0.004185],
[0.525536, 1.934186, 0.004036],
[0.526560, 1.888016, 0.003988],
[0.532032, 1.853575, 0.003910],
[0.526112, 1.812766, 0.003957],
[0.526560, 1.772854, 0.003725],
[0.525920, 1.751741, 0.003742],
[0.526816, 1.728895, 0.003686],
[0.527232, 1.688161, 0.003636],
[0.526752, 1.661554, 0.003581],
[0.525632, 1.625469, 0.003306],
[0.525728, 1.602726, 0.003303],
[0.525728, 1.577046, 0.003349],
[0.526112, 1.550125, 0.003306],
[0.527040, 1.529750, 0.003406],
[0.526400, 1.507001, 0.003241],
[0.526016, 1.481320, 0.003114],
[0.526080, 1.454589, 0.002933],
[0.527104, 1.435128, 0.002849],
[0.526624, 1.411212, 0.002813],
[0.525824, 1.392766, 0.002961],
[0.528064, 1.375574, 0.002822],
[0.526464, 1.353292, 0.002850],
[0.526784, 1.343961, 0.002725],
[0.542432, 1.315233, 0.002805],
[0.526272, 1.299547, 0.002736],
[0.526656, 1.281460, 0.002768],
[0.525536, 1.265483, 0.002643],
[0.525376, 1.248695, 0.002640],
[0.526176, 1.232123, 0.002530],
[0.526368, 1.222044, 0.002598],
[0.526752, 1.206794, 0.002436],
[0.525952, 1.192278, 0.002517],
[0.526560, 1.174037, 0.002355],
[0.527200, 1.158057, 0.002440],
[0.525056, 1.147746, 0.002256],
[0.526272, 1.132740, 0.002261],
[0.526720, 1.123024, 0.002365],
[0.525952, 1.109921, 0.002294],
[0.543072, 1.091456, 0.002374],
[0.526272, 1.080753, 0.002258],
[0.526816, 1.066979, 0.002267],
[0.525920, 1.059073, 0.002165],
[0.526496, 1.045513, 0.002159],
[0.525664, 1.032435, 0.002238],
[0.526176, 1.025680, 0.002096],
[0.526944, 1.010716, 0.002035],
[0.526272, 0.999710, 0.002035],
[0.526880, 0.992048, 0.002027],
[0.526656, 0.985086, 0.002064],
[0.525056, 0.970997, 0.001944],
[0.525952, 0.964040, 0.001954]])



namedict = {0:'genRayFromCam',
            1:'pathTraceOneBounce',
            2:'shadeMaterial'}

testnamesdict = ['caching\noff',
                 'caching\non',
                 'no stream\ncompaction',
                 'sorting\noff',
                 'blocksize\n16',
                 'blocksize\n32',
                 'blocksize\n64',
                 'blocksize\n128',
                 'blocsize\n256']

testnames = ['caching_off',
             'caching_on',
             'no_stream_compaction',
             'sorting_off',
             'blocksize_16',
             'blocksize_32',
             'blocksize_64',
             'blocksize_128',
             'blocksize_256']

def autolabel(rects):
    # attach some text labels
    for rect in rects:
        height = rect.get_height()
        ax.text(rect.get_x() + rect.get_width()/2., 1.05*height,
                '%.3f' % height,
                ha='center', va='bottom')




tests = [test1, test2, test3, test4, test5, test6, test7, test8, test9]

for i in range(len(tests)):
    tests[i] = splitXYZarray(tests[i])


matplotlib.rc("figure", facecolor="black")

xaxis = range(1, 101)
fig = plt.figure(facecolor='black')
fig.patch.set_alpha(0.0)
fig.patch.set_facecolor('black')
fig.patch.set_color('white')
plt.rcParams['text.color'] = 'white'
plt.rcParams['axes.facecolor'] = 'black'

r = 0.0
g = 0.0
b = 1.0
testnum = 9
for i in range(testnum):
    testname = testnamesdict[i]
    print testname
    
    print namedict[0]
    print tests[i][0]
    print

    print namedict[1]
    print tests[i][1]
    print

    print namedict[2]
    print tests[i][2]
    print

    #fig = plt.figure(facecolor="white")
    #fig.patch.set_alpha(0.0)
    #fig.patch.set_facecolor('black')
    g1 = random.random()
    g2 = random.random()
    g3 = random.random()
    
    ax = fig.add_subplot(111)
    #ax.set_title(namedict[0])
    #ax.plot(xaxis, tests[i][0], color=[1.0*i/testnum, g1, 1.0-(1.0*i/testnum)])
    #ax.text(68.0, 0.7 + i*1.0/testnum, testnames[i], color=[1.0*i/testnum, g2, 1.0-(1.0*i/testnum)])

    ax.set_title(namedict[1])
    ax.plot(xaxis, tests[i][1], color=[1.0*i/testnum, b, 1.0-(1.0*i/testnum)])
    ax.text(68.0, 3.0 + i*3.0/testnum, testnames[i], color=[1.0*i/testnum, g2, 1.0-(1.0*i/testnum)])

    ax.plot(xaxis, tests[i][2], color=[1.0*i/testnum, 0, 1.0-(1.0*i/testnum)])
    ax.set_xlabel('iterations') 
    ax.set_ylabel('time') 
    ax.xaxis.label.set_color('white')
    ax.yaxis.label.set_color('white')
    ax.tick_params(axis='x', colors='white')
    ax.tick_params(axis='y', colors='white')
    ax.axis((1,100,0,10))
    plt.axis((1,101,0,10))
    fig.savefig('deleteme_%s.png' % testnames[i], transparent=True)
    #plt.show()
    fig.delaxes(ax)

#plt.show()
#exit()

#plt.axis((1,101,0,10))
#fig.savefig('all.png')
#plt.show()

exit()

p_genRayFromCam = []
p_pathTraceOneBounce = []
p_shadeMaterial = []


for i in range(testnum):
    p_genRayFromCam.append(np.average(tests[i][0]))
    p_pathTraceOneBounce.append(np.average(tests[i][1]))
    p_shadeMaterial.append(np.average(tests[i][2]))


fig, ax = plt.subplots()
genray = ax.bar(range(0,testnum), p_genRayFromCam, align='center', alpha=0.5)
trace = ax.bar(range(0,testnum), p_pathTraceOneBounce, align='center', alpha=0.5)
shade = ax.bar(range(0,testnum), p_shadeMaterial, align='center', alpha=0.5)
#plt.xticks(range(0,testnum), testnamesdict)


width = 0.5      # the width of the bars
xaxis = np.arange(1.0, testnum+1)

fig, ax = plt.subplots()
rects1 = ax.bar(xaxis, p_genRayFromCam, width, color='#228888')#, yerr=p_genRayFromCam)
rects2 = ax.bar(xaxis+width*1.0, p_pathTraceOneBounce, width, color='#5588cc')#, yerr=p_pathTraceOneBounce)
rects3 = ax.bar(xaxis+width*2.0, p_shadeMaterial, width, color='#1122ff')#, yerr=p_pathTraceOneBounce)

fig = plt.figure(facecolor='black')
fig.patch.set_facecolor('black')
ax.patch.set_facecolor('black')

# add some text for labels, title and axes ticks
ax.set_ylabel('Test Benchmark Averages')
ax.set_title('Average time')
ax.set_xticks(xaxis+width)
ax.set_xticklabels(testnamesdict)
ax.xaxis.label.set_color('white')
ax.yaxis.label.set_color('white')
ax.tick_params(axis='x', colors='white')
ax.tick_params(axis='y', colors='white')

ax.legend((rects1[0], rects2[0], rects3[0]), (namedict[0], namedict[1], namedict[2]))

autolabel(rects1)
autolabel(rects2)
autolabel(rects3)

ax.axis((1,10,0,10))

plt.show()


# show shading graph which is invisible at the moment
fig, ax = plt.subplots()
rects3 = ax.bar(xaxis, p_shadeMaterial, width, color='#1122ff')#, yerr=p_pathTraceOneBounce)

fig = plt.figure(facecolor='black')
fig.patch.set_facecolor('black')
ax.patch.set_facecolor('black')

# add some text for labels, title and axes ticks
ax.set_ylabel('Test Benchmark Averages')
ax.set_title('Average time')
ax.set_xticks(xaxis)
ax.set_xticklabels(testnamesdict)
ax.xaxis.label.set_color('white')
ax.yaxis.label.set_color('white')
ax.tick_params(axis='x', colors='white')
ax.tick_params(axis='y', colors='white')

ax.legend([rects3[0]], [namedict[2]])


autolabel(rects3)
ax.axis((1,10,0,0.05))
plt.show()




